// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hub_to_agent.proto

package idl

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PingAgentsRequest struct {
}

func (m *PingAgentsRequest) Reset()                    { *m = PingAgentsRequest{} }
func (m *PingAgentsRequest) String() string            { return proto.CompactTextString(m) }
func (*PingAgentsRequest) ProtoMessage()               {}
func (*PingAgentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type PingAgentsReply struct {
}

func (m *PingAgentsReply) Reset()                    { *m = PingAgentsReply{} }
func (m *PingAgentsReply) String() string            { return proto.CompactTextString(m) }
func (*PingAgentsReply) ProtoMessage()               {}
func (*PingAgentsReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type CheckUpgradeStatusRequest struct {
}

func (m *CheckUpgradeStatusRequest) Reset()                    { *m = CheckUpgradeStatusRequest{} }
func (m *CheckUpgradeStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckUpgradeStatusRequest) ProtoMessage()               {}
func (*CheckUpgradeStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type CheckUpgradeStatusReply struct {
	ProcessList string `protobuf:"bytes,1,opt,name=process_list,json=processList" json:"process_list,omitempty"`
}

func (m *CheckUpgradeStatusReply) Reset()                    { *m = CheckUpgradeStatusReply{} }
func (m *CheckUpgradeStatusReply) String() string            { return proto.CompactTextString(m) }
func (*CheckUpgradeStatusReply) ProtoMessage()               {}
func (*CheckUpgradeStatusReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *CheckUpgradeStatusReply) GetProcessList() string {
	if m != nil {
		return m.ProcessList
	}
	return ""
}

type CheckConversionStatusRequest struct {
	Segments []*SegmentInfo `protobuf:"bytes,1,rep,name=segments" json:"segments,omitempty"`
	Hostname string         `protobuf:"bytes,2,opt,name=hostname" json:"hostname,omitempty"`
}

func (m *CheckConversionStatusRequest) Reset()                    { *m = CheckConversionStatusRequest{} }
func (m *CheckConversionStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckConversionStatusRequest) ProtoMessage()               {}
func (*CheckConversionStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *CheckConversionStatusRequest) GetSegments() []*SegmentInfo {
	if m != nil {
		return m.Segments
	}
	return nil
}

func (m *CheckConversionStatusRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type SegmentInfo struct {
	Content int32 `protobuf:"varint,1,opt,name=content" json:"content,omitempty"`
	Dbid    int32 `protobuf:"varint,2,opt,name=dbid" json:"dbid,omitempty"`
}

func (m *SegmentInfo) Reset()                    { *m = SegmentInfo{} }
func (m *SegmentInfo) String() string            { return proto.CompactTextString(m) }
func (*SegmentInfo) ProtoMessage()               {}
func (*SegmentInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *SegmentInfo) GetContent() int32 {
	if m != nil {
		return m.Content
	}
	return 0
}

func (m *SegmentInfo) GetDbid() int32 {
	if m != nil {
		return m.Dbid
	}
	return 0
}

type CheckConversionStatusReply struct {
	Statuses []string `protobuf:"bytes,1,rep,name=statuses" json:"statuses,omitempty"`
}

func (m *CheckConversionStatusReply) Reset()                    { *m = CheckConversionStatusReply{} }
func (m *CheckConversionStatusReply) String() string            { return proto.CompactTextString(m) }
func (*CheckConversionStatusReply) ProtoMessage()               {}
func (*CheckConversionStatusReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *CheckConversionStatusReply) GetStatuses() []string {
	if m != nil {
		return m.Statuses
	}
	return nil
}

type FileSysUsage struct {
	Filesystem string  `protobuf:"bytes,1,opt,name=filesystem" json:"filesystem,omitempty"`
	Usage      float64 `protobuf:"fixed64,2,opt,name=usage" json:"usage,omitempty"`
}

func (m *FileSysUsage) Reset()                    { *m = FileSysUsage{} }
func (m *FileSysUsage) String() string            { return proto.CompactTextString(m) }
func (*FileSysUsage) ProtoMessage()               {}
func (*FileSysUsage) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *FileSysUsage) GetFilesystem() string {
	if m != nil {
		return m.Filesystem
	}
	return ""
}

func (m *FileSysUsage) GetUsage() float64 {
	if m != nil {
		return m.Usage
	}
	return 0
}

type CheckDiskUsageRequestToAgent struct {
}

func (m *CheckDiskUsageRequestToAgent) Reset()                    { *m = CheckDiskUsageRequestToAgent{} }
func (m *CheckDiskUsageRequestToAgent) String() string            { return proto.CompactTextString(m) }
func (*CheckDiskUsageRequestToAgent) ProtoMessage()               {}
func (*CheckDiskUsageRequestToAgent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

type CheckDiskUsageReplyFromAgent struct {
	ListOfFileSysUsage []*FileSysUsage `protobuf:"bytes,1,rep,name=list_of_file_sys_usage,json=listOfFileSysUsage" json:"list_of_file_sys_usage,omitempty"`
}

func (m *CheckDiskUsageReplyFromAgent) Reset()                    { *m = CheckDiskUsageReplyFromAgent{} }
func (m *CheckDiskUsageReplyFromAgent) String() string            { return proto.CompactTextString(m) }
func (*CheckDiskUsageReplyFromAgent) ProtoMessage()               {}
func (*CheckDiskUsageReplyFromAgent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *CheckDiskUsageReplyFromAgent) GetListOfFileSysUsage() []*FileSysUsage {
	if m != nil {
		return m.ListOfFileSysUsage
	}
	return nil
}

func init() {
	proto.RegisterType((*PingAgentsRequest)(nil), "idl.PingAgentsRequest")
	proto.RegisterType((*PingAgentsReply)(nil), "idl.PingAgentsReply")
	proto.RegisterType((*CheckUpgradeStatusRequest)(nil), "idl.CheckUpgradeStatusRequest")
	proto.RegisterType((*CheckUpgradeStatusReply)(nil), "idl.CheckUpgradeStatusReply")
	proto.RegisterType((*CheckConversionStatusRequest)(nil), "idl.CheckConversionStatusRequest")
	proto.RegisterType((*SegmentInfo)(nil), "idl.SegmentInfo")
	proto.RegisterType((*CheckConversionStatusReply)(nil), "idl.CheckConversionStatusReply")
	proto.RegisterType((*FileSysUsage)(nil), "idl.FileSysUsage")
	proto.RegisterType((*CheckDiskUsageRequestToAgent)(nil), "idl.CheckDiskUsageRequestToAgent")
	proto.RegisterType((*CheckDiskUsageReplyFromAgent)(nil), "idl.CheckDiskUsageReplyFromAgent")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Agent service

type AgentClient interface {
	CheckUpgradeStatus(ctx context.Context, in *CheckUpgradeStatusRequest, opts ...grpc.CallOption) (*CheckUpgradeStatusReply, error)
	CheckConversionStatus(ctx context.Context, in *CheckConversionStatusRequest, opts ...grpc.CallOption) (*CheckConversionStatusReply, error)
	CheckDiskUsageOnAgents(ctx context.Context, in *CheckDiskUsageRequestToAgent, opts ...grpc.CallOption) (*CheckDiskUsageReplyFromAgent, error)
	PingAgents(ctx context.Context, in *PingAgentsRequest, opts ...grpc.CallOption) (*PingAgentsReply, error)
}

type agentClient struct {
	cc *grpc.ClientConn
}

func NewAgentClient(cc *grpc.ClientConn) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) CheckUpgradeStatus(ctx context.Context, in *CheckUpgradeStatusRequest, opts ...grpc.CallOption) (*CheckUpgradeStatusReply, error) {
	out := new(CheckUpgradeStatusReply)
	err := grpc.Invoke(ctx, "/idl.Agent/CheckUpgradeStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) CheckConversionStatus(ctx context.Context, in *CheckConversionStatusRequest, opts ...grpc.CallOption) (*CheckConversionStatusReply, error) {
	out := new(CheckConversionStatusReply)
	err := grpc.Invoke(ctx, "/idl.Agent/CheckConversionStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) CheckDiskUsageOnAgents(ctx context.Context, in *CheckDiskUsageRequestToAgent, opts ...grpc.CallOption) (*CheckDiskUsageReplyFromAgent, error) {
	out := new(CheckDiskUsageReplyFromAgent)
	err := grpc.Invoke(ctx, "/idl.Agent/CheckDiskUsageOnAgents", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) PingAgents(ctx context.Context, in *PingAgentsRequest, opts ...grpc.CallOption) (*PingAgentsReply, error) {
	out := new(PingAgentsReply)
	err := grpc.Invoke(ctx, "/idl.Agent/PingAgents", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Agent service

type AgentServer interface {
	CheckUpgradeStatus(context.Context, *CheckUpgradeStatusRequest) (*CheckUpgradeStatusReply, error)
	CheckConversionStatus(context.Context, *CheckConversionStatusRequest) (*CheckConversionStatusReply, error)
	CheckDiskUsageOnAgents(context.Context, *CheckDiskUsageRequestToAgent) (*CheckDiskUsageReplyFromAgent, error)
	PingAgents(context.Context, *PingAgentsRequest) (*PingAgentsReply, error)
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_CheckUpgradeStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUpgradeStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).CheckUpgradeStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/idl.Agent/CheckUpgradeStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).CheckUpgradeStatus(ctx, req.(*CheckUpgradeStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_CheckConversionStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckConversionStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).CheckConversionStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/idl.Agent/CheckConversionStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).CheckConversionStatus(ctx, req.(*CheckConversionStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_CheckDiskUsageOnAgents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckDiskUsageRequestToAgent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).CheckDiskUsageOnAgents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/idl.Agent/CheckDiskUsageOnAgents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).CheckDiskUsageOnAgents(ctx, req.(*CheckDiskUsageRequestToAgent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_PingAgents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingAgentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).PingAgents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/idl.Agent/PingAgents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).PingAgents(ctx, req.(*PingAgentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "idl.Agent",
	HandlerType: (*AgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckUpgradeStatus",
			Handler:    _Agent_CheckUpgradeStatus_Handler,
		},
		{
			MethodName: "CheckConversionStatus",
			Handler:    _Agent_CheckConversionStatus_Handler,
		},
		{
			MethodName: "CheckDiskUsageOnAgents",
			Handler:    _Agent_CheckDiskUsageOnAgents_Handler,
		},
		{
			MethodName: "PingAgents",
			Handler:    _Agent_PingAgents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hub_to_agent.proto",
}

func init() { proto.RegisterFile("hub_to_agent.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 439 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x6d, 0x5a, 0x02, 0xe9, 0xa4, 0x12, 0x64, 0x28, 0x21, 0x98, 0x2a, 0xb4, 0x7b, 0xea, 0x01,
	0xe5, 0x50, 0x2e, 0x48, 0xf4, 0x82, 0x5a, 0x2a, 0x21, 0x21, 0x15, 0x39, 0xed, 0x11, 0x19, 0x27,
	0x9e, 0x38, 0xab, 0x6e, 0x76, 0x8d, 0x67, 0x83, 0xe4, 0x7f, 0xe5, 0x63, 0xd0, 0xee, 0x86, 0xd4,
	0x51, 0x62, 0x6e, 0x9e, 0x37, 0x33, 0x6f, 0x9e, 0xdf, 0xce, 0x00, 0xce, 0x97, 0x93, 0xc4, 0x9a,
	0x24, 0xcd, 0x49, 0xdb, 0x51, 0x51, 0x1a, 0x6b, 0xf0, 0x40, 0x66, 0x4a, 0xbc, 0x84, 0xde, 0x77,
	0xa9, 0xf3, 0xcf, 0x0e, 0xe7, 0x98, 0x7e, 0x2d, 0x89, 0xad, 0xe8, 0xc1, 0xf3, 0x3a, 0x58, 0xa8,
	0x4a, 0xbc, 0x85, 0x37, 0x57, 0x73, 0x9a, 0x3e, 0xdc, 0x17, 0x79, 0x99, 0x66, 0x34, 0xb6, 0xa9,
	0x5d, 0xae, 0xeb, 0x2f, 0xe1, 0xf5, 0xae, 0x64, 0xa1, 0x2a, 0x3c, 0x83, 0xa3, 0xa2, 0x34, 0x53,
	0x62, 0x4e, 0x94, 0x64, 0x3b, 0x68, 0x9d, 0xb6, 0xce, 0x0f, 0xe3, 0xee, 0x0a, 0xfb, 0x26, 0xd9,
	0x8a, 0x39, 0x9c, 0xf8, 0xee, 0x2b, 0xa3, 0x7f, 0x53, 0xc9, 0xd2, 0xe8, 0x0d, 0x76, 0x7c, 0x0f,
	0x1d, 0xa6, 0x7c, 0xe1, 0xb4, 0x0c, 0x5a, 0xa7, 0x07, 0xe7, 0xdd, 0x8b, 0x17, 0x23, 0x99, 0xa9,
	0xd1, 0x38, 0x80, 0x5f, 0xf5, 0xcc, 0xc4, 0xeb, 0x0a, 0x8c, 0xa0, 0x33, 0x37, 0x6c, 0x75, 0xba,
	0xa0, 0xc1, 0xbe, 0x1f, 0xb6, 0x8e, 0xc5, 0x27, 0xe8, 0xd6, 0x9a, 0x70, 0x00, 0xcf, 0xa6, 0x46,
	0x5b, 0xd2, 0x41, 0x56, 0x3b, 0xfe, 0x17, 0x22, 0xc2, 0x93, 0x6c, 0x22, 0x33, 0x4f, 0xd0, 0x8e,
	0xfd, 0xb7, 0xf8, 0x08, 0x51, 0x83, 0x4c, 0xf7, 0x9f, 0x11, 0x74, 0xd8, 0x87, 0x14, 0x44, 0x1e,
	0xc6, 0xeb, 0x58, 0x5c, 0xc3, 0xd1, 0x8d, 0x54, 0x34, 0xae, 0xf8, 0x9e, 0xd3, 0x9c, 0x70, 0x08,
	0x30, 0x93, 0x8a, 0xb8, 0x62, 0x4b, 0x8b, 0x95, 0x23, 0x35, 0x04, 0x8f, 0xa1, 0xbd, 0x74, 0x85,
	0x7e, 0x7c, 0x2b, 0x0e, 0x81, 0x18, 0xae, 0x6c, 0xba, 0x96, 0xfc, 0xe0, 0x79, 0x56, 0xfe, 0xdc,
	0x19, 0xff, 0x4e, 0x82, 0xb6, 0xf3, 0x85, 0xaa, 0x6e, 0x4a, 0xb3, 0xf0, 0x79, 0xfc, 0x02, 0x7d,
	0xf7, 0x02, 0x89, 0x99, 0x25, 0x6e, 0x56, 0xc2, 0x15, 0x27, 0x61, 0x4c, 0x30, 0xb5, 0xe7, 0x4d,
	0xad, 0x0b, 0x8d, 0xd1, 0x35, 0xdc, 0xce, 0xea, 0xd8, 0xc5, 0x9f, 0x7d, 0x68, 0x07, 0xc2, 0x3b,
	0xc0, 0xed, 0x57, 0xc7, 0xa1, 0xa7, 0x69, 0xdc, 0x95, 0xe8, 0xa4, 0x31, 0xef, 0xd6, 0x6c, 0x0f,
	0x7f, 0xc0, 0xab, 0x9d, 0x36, 0xe3, 0xd9, 0x63, 0x63, 0xc3, 0xa6, 0x44, 0xef, 0xfe, 0x57, 0x12,
	0xe8, 0x7f, 0x42, 0x7f, 0xd3, 0xa5, 0x5b, 0x1d, 0xd6, 0xbc, 0xce, 0xdf, 0x60, 0x71, 0xb4, 0xbb,
	0xa4, 0xee, 0xb2, 0xd8, 0xc3, 0x4b, 0x80, 0xc7, 0xe3, 0xc1, 0xbe, 0x6f, 0xd9, 0x3a, 0xb1, 0xe8,
	0x78, 0x0b, 0xf7, 0xfa, 0x26, 0x4f, 0xfd, 0x6d, 0x7e, 0xf8, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x44,
	0x53, 0xee, 0xfa, 0xb1, 0x03, 0x00, 0x00,
}
